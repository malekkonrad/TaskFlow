@model TaskFlow.Models.Project

@{
    ViewData["Title"] = "Szczegóły projektu - TaskFlow";
}

<style>
    .page-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 20px;
    }
    
    .content-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }
    
    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 30px;
        text-align: center;
        color: white;
    }
    
    .page-header h1 {
        margin: 0;
        font-weight: 300;
        font-size: 2.5rem;
    }
    
    .page-header p {
        margin: 10px 0 0 0;
        opacity: 0.9;
    }
    
    .content-body {
        padding: 30px;
    }
    
    .alert-custom {
        border-radius: 8px;
        border: none;
        margin-bottom: 20px;
        padding: 12px 15px;
    }
    
    .alert-danger-custom {
        background: #fee;
        color: #c33;
        border-left: 4px solid #c33;
    }
    
    .alert-success-custom {
        background: #efe;
        color: #363;
        border-left: 4px solid #363;
    }
    
    .project-info-card {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 25px;
        margin-bottom: 30px;
        border: 2px solid #e9ecef;
    }
    
    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }
    
    .info-item {
        background: white;
        padding: 15px;
        border-radius: 8px;
        border-left: 4px solid #667eea;
    }
    
    .info-label {
        font-size: 0.85rem;
        color: #6c757d;
        font-weight: 600;
        text-transform: uppercase;
        margin-bottom: 5px;
    }
    
    .info-value {
        font-size: 1.1rem;
        color: #333;
        font-weight: 500;
    }
    
    .visibility-badge {
        display: inline-flex;
        align-items: center;
        gap: 5px;
        padding: 4px 12px;
        border-radius: 6px;
        font-size: 0.9rem;
        font-weight: 600;
    }
    
    .visibility-public {
        background: #d4edda;
        color: #155724;
    }
    
    .visibility-private {
        background: #f8d7da;
        color: #721c24;
    }
    
    .project-description {
        background: white;
        padding: 20px;
        border-radius: 8px;
        border-left: 4px solid #28a745;
        margin-top: 15px;
    }
    
    .section-header {
        display: flex;
        justify-content: between;
        align-items: center;
        margin: 30px 0 20px 0;
        padding-bottom: 10px;
        border-bottom: 2px solid #e9ecef;
    }
    
    .section-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #333;
        margin: 0;
    }
    
    .btn-custom {
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 500;
        text-decoration: none;
        display: inline-block;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        margin: 5px;
    }
    
    .btn-success-custom {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
    }
    
    .btn-warning-custom {
        background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
        color: #212529;
    }
    
    .btn-secondary-custom {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        color: white;
    }
    
    .btn-info-custom {
        background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
        color: white;
    }
    
    .btn-custom:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        text-decoration: none;
        color: inherit;
    }
    
    .tasks-section {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 25px;
        margin-top: 30px;
        border: 2px solid #e9ecef;
    }
    
    .task-table {
        background: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    .task-table table {
        margin: 0;
    }
    
    .task-table th {
        background: #667eea;
        color: white;
        font-weight: 600;
        border: none;
        padding: 15px 12px;
    }
    
    .task-table td {
        padding: 12px;
        border-top: 1px solid #e9ecef;
        vertical-align: middle;
    }
    
    .task-table tr:hover {
        background: #f8f9fa;
    }
    
    .status-badge {
        padding: 4px 8px;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 600;
    }
    
    .status-done {
        background: #d4edda;
        color: #155724;
    }
    
    .status-progress {
        background: #fff3cd;
        color: #856404;
    }
    
    .status-todo {
        background: #e9ecef;
        color: #495057;
    }
    
    .btn-sm-custom {
        padding: 4px 8px;
        font-size: 0.75rem;
        border-radius: 4px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        margin: 1px;
    }
    
    .btn-sm-info {
        background: #17a2b8;
        color: white;
    }
    
    .btn-sm-warning {
        background: #ffc107;
        color: #212529;
    }
    
    .btn-sm-danger {
        background: #dc3545;
        color: white;
    }
    
    .btn-sm-custom:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        text-decoration: none;
        color: inherit;
    }
    
    .no-tasks-state {
        text-align: center;
        padding: 40px 20px;
        color: #6c757d;
        background: white;
        border-radius: 8px;
    }
    
    .no-tasks-state i {
        font-size: 3rem;
        margin-bottom: 15px;
        color: #dee2e6;
    }
    
    .action-buttons {
        margin-top: 30px;
        padding-top: 20px;
        border-top: 2px solid #e9ecef;
        text-align: center;
    }
</style>

<div class="page-container">
    <div class="content-card">
        <div class="page-header">
            <div style="font-size: 3rem; margin-bottom: 10px;">
                <i class="fas fa-project-diagram"></i>
            </div>
            <h1>Szczegóły Projektu</h1>
            <p>@Model.Name</p>
        </div>
        
        <div class="content-body">
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert-custom alert-danger-custom">
                    <i class="fas fa-exclamation-triangle"></i>
                    @TempData["ErrorMessage"]
                </div>
            }
            
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert-custom alert-success-custom">
                    <i class="fas fa-check-circle"></i>
                    @TempData["SuccessMessage"]
                </div>
            }
            
            <!-- Informacje o projekcie -->
            <div class="project-info-card">
                <div class="info-grid">
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-tag"></i> Nazwa projektu
                        </div>
                        <div class="info-value">@Model.Name</div>
                    </div>
                    
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-user"></i> Właściciel
                        </div>
                        <div class="info-value">@Model.Owner.UserName</div>
                    </div>
                    
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-globe"></i> Widoczność
                        </div>
                        <div class="info-value">
                            <span class="visibility-badge @(Model.IsPublic ? "visibility-public" : "visibility-private")">
                                <i class="fas fa-@(Model.IsPublic ? "globe" : "lock")"></i>
                                @(Model.IsPublic ? "Publiczny" : "Prywatny")
                            </span>
                        </div>
                    </div>
                    
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-tasks"></i> Liczba zadań
                        </div>
                        <div class="info-value">@(Model.Tasks?.Count ?? 0)</div>
                    </div>
                </div>
                
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="project-description">
                        <div class="info-label">
                            <i class="fas fa-align-left"></i> Opis projektu
                        </div>
                        <div class="info-value">@Model.Description</div>
                    </div>
                }
            </div>
            
            <!-- Sekcja zadań -->
            <div class="tasks-section">
                <div class="section-header">
                    <h4 class="section-title">
                        <i class="fas fa-tasks"></i>
                        Zadania w tym projekcie (@(Model.Tasks?.Count ?? 0))
                    </h4>
                    <a asp-controller="UserTask" asp-action="Create" asp-route-projectId="@Model.Id" class="btn-custom btn-success-custom">
                        <i class="fas fa-plus"></i> Nowe zadanie
                    </a>
                </div>
                
                @if (Model.Tasks != null && Model.Tasks.Any())
                {
                    <div class="task-table">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-heading"></i> Tytuł</th>
                                    <th><i class="fas fa-align-left"></i> Opis</th>
                                    <th><i class="fas fa-flag"></i> Status</th>
                                    <th><i class="fas fa-user"></i> Przypisane</th>
                                    <th><i class="fas fa-calendar"></i> Utworzono</th>
                                    <th><i class="fas fa-calendar-times"></i> Termin</th>
                                    <th><i class="fas fa-cogs"></i> Akcje</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var task in Model.Tasks.OrderByDescending(t => t.CreatedAt))
                                {
                                    <tr>
                                        <td><strong>@task.Title</strong></td>
                                        <td>@(task.Description?.Length > 50 ? task.Description.Substring(0, 50) + "..." : task.Description)</td>
                                        <td>
                                            <span class="status-badge @(task.Status?.Name == "Done" ? "status-done" : task.Status?.Name == "In Progress" ? "status-progress" : "status-todo")">
                                                @(task.Status?.Name ?? "To Do")
                                            </span>
                                        </td>
                                        <td>
                                            @if (task.Assignee != null)
                                            {
                                                <i class="fas fa-user-check"></i> @task.Assignee.UserName
                                            }
                                            else
                                            {
                                                <span class="text-muted"><i class="fas fa-user-times"></i> Nieprzypisane</span>
                                            }
                                        </td>
                                        <td>@task.CreatedAt.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            @if (task.Deadline.HasValue)
                                            {
                                                <span class="@(task.Deadline < DateTime.Now ? "text-danger" : "text-success")">
                                                    <i class="fas fa-calendar-@(task.Deadline < DateTime.Now ? "times" : "check")"></i>
                                                    @task.Deadline.Value.ToString("dd/MM/yyyy")
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">
                                                    <i class="fas fa-calendar-minus"></i> Brak terminu
                                                </span>
                                            }
                                        </td>
                                        <td>
                                            <a asp-controller="UserTask" asp-action="Details" asp-route-id="@task.Id" class="btn-sm-custom btn-sm-info">
                                                <i class="fas fa-eye"></i> Szczegóły
                                            </a>
                                            <a asp-controller="UserTask" asp-action="Edit" asp-route-id="@task.Id" class="btn-sm-custom btn-sm-warning">
                                                <i class="fas fa-edit"></i> Edytuj
                                            </a>
                                            <a asp-controller="UserTask" asp-action="Delete" asp-route-id="@task.Id" class="btn-sm-custom btn-sm-danger">
                                                <i class="fas fa-trash"></i> Usuń
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="no-tasks-state">
                        <i class="fas fa-clipboard-list"></i>
                        <h5>Brak zadań w tym projekcie</h5>
                        <p>Ten projekt nie ma jeszcze żadnych zadań. Utwórz pierwsze zadanie, aby rozpocząć pracę.</p>
                        <a asp-controller="UserTask" asp-action="Create" asp-route-projectId="@Model.Id" class="btn-custom btn-success-custom">
                            <i class="fas fa-plus"></i> Utwórz pierwsze zadanie
                        </a>
                    </div>
                }
            </div>
            
            <!-- Przyciski akcji -->
            <div class="action-buttons">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn-custom btn-warning-custom">
                    <i class="fas fa-edit"></i> Edytuj projekt
                </a>
                <a asp-action="Index" class="btn-custom btn-secondary-custom">
                    <i class="fas fa-arrow-left"></i> Powrót do listy
                </a>
                
                @if (Model.OwnerId == Int32.Parse(ViewContext.HttpContext.Session.GetString("Id")))
                {
                    <a asp-action="Members" asp-route-id="@Model.Id" class="btn-custom btn-info-custom">
                        <i class="fas fa-users"></i> Zarządzaj członkami
                    </a>
                }
            </div>
        </div>
    </div>
</div>
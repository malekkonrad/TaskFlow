@model IEnumerable<TaskFlow.Models.UserTask>

@{
    ViewData["Title"] = "Zadania - TaskFlow";
}

<style>
    .page-container {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        min-height: 100vh;
        padding: 20px;
    }
    
    .content-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        animation: slideUp 0.6s ease-out;
    }
    
    .page-header {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        padding: 30px;
        text-align: center;
        color: white;
    }
    
    .page-header h1 {
        margin: 0;
        font-weight: 300;
        font-size: 2.5rem;
    }
    
    .page-header p {
        margin: 10px 0 0 0;
        opacity: 0.9;
    }
    
    .content-body {
        padding: 30px;
    }
    
    .action-buttons {
        margin-bottom: 30px;
    }
    
    .btn-custom {
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 500;
        text-decoration: none;
        display: inline-block;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }
    
    .btn-success-custom {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
    }
    
    .btn-success-custom:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(40, 167, 69, 0.4);
        color: white;
        text-decoration: none;
    }
    
    .task-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }
    
    .task-card {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 20px;
        transition: all 0.3s ease;
        border: 2px solid #e9ecef;
        position: relative;
    }
    
    .task-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        border-color: #28a745;
    }
    
    .task-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 10px;
        padding-right: 80px;
    }
    
    .task-description {
        color: #6c757d;
        margin-bottom: 15px;
        font-size: 0.9rem;
        min-height: 40px;
    }
    
    .task-meta {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
        margin-bottom: 15px;
        font-size: 0.85rem;
    }
    
    .task-meta-item {
        display: flex;
        align-items: center;
        gap: 5px;
    }
    
    .task-status {
        position: absolute;
        top: 15px;
        right: 15px;
        padding: 4px 8px;
        border-radius: 6px;
        font-size: 0.75rem;
        font-weight: 600;
    }
    
    .status-todo {
        background: #e9ecef;
        color: #495057;
    }
    
    .status-progress {
        background: #fff3cd;
        color: #856404;
    }
    
    .status-done {
        background: #d4edda;
        color: #155724;
    }
    
    .task-project {
        color: #667eea;
        font-weight: 500;
    }
    
    .task-assignee {
        color: #495057;
    }
    
    .task-dates {
        color: #6c757d;
    }
    
    .task-deadline {
        color: #dc3545;
        font-weight: 500;
    }
    
    .task-deadline.safe {
        color: #28a745;
    }
    
    .task-actions {
        display: flex;
        gap: 8px;
        flex-wrap: wrap;
    }
    
    .btn-sm-custom {
        padding: 6px 12px;
        font-size: 0.8rem;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .btn-info-custom {
        background: #17a2b8;
        color: white;
    }
    
    .btn-warning-custom {
        background: #ffc107;
        color: #212529;
    }
    
    .btn-danger-custom {
        background: #dc3545;
        color: white;
    }
    
    .btn-sm-custom:hover {
        transform: translateY(-1px);
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
        text-decoration: none;
        color: inherit;
    }
    
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #6c757d;
    }
    
    .empty-state i {
        font-size: 4rem;
        margin-bottom: 20px;
        color: #dee2e6;
    }
@*     
    @keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    } *@
    
    @* @media (max-width: 768px) {
        .task-grid {
            grid-template-columns: 1fr;
        }
        
        .page-container {
            padding: 10px;
        }
        
        .content-body {
            padding: 20px;
        }
    } *@
</style>

<div class="page-container">
    <div class="content-card">
        <div class="page-header">
            <div style="font-size: 3rem; margin-bottom: 10px;">
                <i class="fas fa-tasks"></i>
            </div>
            <h1>Moje Zadania</h1>
            <p>Śledź postęp i zarządzaj swoimi zadaniami</p>
        </div>
        
        <div class="content-body">
            <div class="action-buttons">
                <a asp-action="Create" class="btn-custom btn-success-custom">
                    <i class="fas fa-plus"></i> Nowe zadanie
                </a>
            </div>
            
            @if (Model.Any())
            {
                <div class="task-grid">
                    @foreach (var task in Model)
                    {
                        <div class="task-card">
                            <div class="task-status @(task.Status?.Name == "Done" ? "status-done" : task.Status?.Name == "In Progress" ? "status-progress" : "status-todo")">
                                @(task.Status?.Name ?? "To Do")
                            </div>
                            
                            <div class="task-title">
                                <i class="fas fa-check-circle"></i>
                                @task.Title
                            </div>
                            
                            <div class="task-description">
                                @(string.IsNullOrEmpty(task.Description) ? "Brak opisu" : 
                                  task.Description.Length > 100 ? task.Description.Substring(0, 100) + "..." : task.Description)
                            </div>
                            
                            <div class="task-meta">
                                <div class="task-meta-item">
                                    <i class="fas fa-folder"></i>
                                    <span class="task-project">@(task.Project?.Name ?? "Brak projektu")</span>
                                </div>
                                <div class="task-meta-item">
                                    <i class="fas fa-user"></i>
                                    <span class="task-assignee">@(task.Assignee?.UserName ?? "Nieprzypisane")</span>
                                </div>
                                <div class="task-meta-item">
                                    <i class="fas fa-calendar-plus"></i>
                                    <span class="task-dates">@task.CreatedAt.ToString("dd/MM/yyyy")</span>
                                </div>
                                <div class="task-meta-item">
                                    <i class="fas fa-calendar-times"></i>
                                    @if (task.Deadline.HasValue)
                                    {
                                        <span class="task-deadline @(task.Deadline < DateTime.Now ? "" : "safe")">
                                            @task.Deadline.Value.ToString("dd/MM/yyyy")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="task-dates">Brak terminu</span>
                                    }
                                </div>
                            </div>
                            
                            <div class="task-actions">
                                <a asp-action="Details" asp-route-id="@task.Id" class="btn-sm-custom btn-info-custom">
                                    <i class="fas fa-eye"></i> Szczegóły
                                </a>
                                <a asp-action="Edit" asp-route-id="@task.Id" class="btn-sm-custom btn-warning-custom">
                                    <i class="fas fa-edit"></i> Edytuj
                                </a>
                                <a asp-action="Delete" asp-route-id="@task.Id" class="btn-sm-custom btn-danger-custom">
                                    <i class="fas fa-trash"></i> Usuń
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-clipboard-list"></i>
                    <h3>Brak zadań</h3>
                    <p>Nie masz jeszcze żadnych zadań. Utwórz swoje pierwsze zadanie, aby rozpocząć pracę.</p>
                    <a asp-action="Create" class="btn-custom btn-success-custom">
                        <i class="fas fa-plus"></i> Utwórz pierwsze zadanie
                    </a>
                </div>
            }
        </div>
    </div>
</div>
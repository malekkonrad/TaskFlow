@model TaskFlow.Models.UserTask

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>UserTask</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Deadline)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Deadline)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Project)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Project.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Assignee)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Assignee.UserName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Status.Name)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-controller="Project" asp-action="Details" asp-route-id="@Model?.ProjectId">Back to Project</a>
</div>



<hr />
<div class="mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4>Comments (@(Model.Comments?.Count ?? 0))</h4>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addCommentModal">Add Comment</button>
    </div>
    
    @if (Model.Comments != null && Model.Comments.Any())
    {
        <div class="comments-container">
            @foreach (var comment in Model.Comments.OrderBy(c => c.CreatedAt))
            {
                <div class="comment-item border rounded mb-3 p-3">
                    <div class="comment-header d-flex justify-content-between align-items-start mb-2">
                        <div class="d-flex align-items-center">
                            <div class="avatar-circle me-2">
                                @comment.Author?.UserName?.Substring(0, 1).ToUpper()
                            </div>
                            <div>
                                <strong>@comment.Author?.UserName</strong>
                                <small class="text-muted ms-2">commented @comment.CreatedAt.ToString("MMM dd, yyyy 'at' HH:mm")</small>
                            </div>
                        </div>
                        <div class="comment-actions">
                            <a asp-controller="Comment" asp-action="Edit" asp-route-id="@comment.Id" class="btn btn-sm btn-outline-secondary">Edit</a>
                            <a asp-controller="Comment" asp-action="Delete" asp-route-id="@comment.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                        </div>
                    </div>
                    <div class="comment-body">
                        <div class="comment-content">
                            @Html.Raw(comment.Content?.Replace("\n", "<br />"))
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-light border text-center py-4">
            <p class="mb-2 text-muted">No comments yet.</p>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCommentModal">Be the first to comment</button>
        </div>
    }
</div>

<!-- Modal do dodawania komentarza -->
<div class="modal fade" id="addCommentModal" tabindex="-1" aria-labelledby="addCommentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCommentModalLabel">Add Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-controller="Comment" asp-action="Create" method="post">
                <div class="modal-body">
                    <input type="hidden" name="TaskItemId" value="@Model.Id" />
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="Content" class="form-label">Comment</label>
                        <textarea name="Content" id="Content" class="form-control" rows="4" placeholder="Leave a comment..." required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-comment"></i> Add Comment
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="mt-4">
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit Project</a>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<style>
.comments-container {
    max-width: 100%;
}

.comment-item {
    background-color: #f8f9fa;
    transition: box-shadow 0.2s ease;
}

.comment-item:hover {
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.avatar-circle {
    width: 32px;
    height: 32px;
    background-color: #6c757d;
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 14px;
}

.comment-content {
    line-height: 1.5;
    word-wrap: break-word;
}

.comment-actions {
    opacity: 0.7;
    transition: opacity 0.2s ease;
}

.comment-item:hover .comment-actions {
    opacity: 1;
}

@* @media (max-width: 768px) {
    .comment-header {
        flex-direction: column;
        align-items: flex-start !important;
    }
    
    .comment-actions {
        margin-top: 8px;
        opacity: 1;
    }
} *@
</style>


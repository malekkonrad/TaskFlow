@model IEnumerable<TaskFlow.Models.User>

@{
    ViewData["Title"] = "Panel Administratora - TaskFlow";
}

<style>
    .page-container {
        background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
        min-height: 100vh;
        padding: 20px;
    }
    
    .content-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        animation: slideUp 0.6s ease-out;
    }
    
    .page-header {
        background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
        padding: 30px;
        text-align: center;
        color: white;
    }
    
    .page-header h1 {
        margin: 0;
        font-weight: 300;
        font-size: 2.5rem;
    }
    
    .page-header p {
        margin: 10px 0 0 0;
        opacity: 0.9;
    }
    
    .content-body {
        padding: 30px;
    }
    
    .action-buttons {
        margin-bottom: 30px;
    }
    
    .btn-custom {
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 500;
        text-decoration: none;
        display: inline-block;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }
    
    .btn-danger-custom {
        background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
        color: white;
    }
    
    .btn-danger-custom:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(220, 53, 69, 0.4);
        color: white;
        text-decoration: none;
    }
    
    .user-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }
    
    .user-card {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 20px;
        transition: all 0.3s ease;
        border: 2px solid #e9ecef;
        position: relative;
    }
    
    .user-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        border-color: #dc3545;
    }
    
    .user-header {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
    }
    
    .user-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 1.2rem;
        margin-right: 15px;
    }
    
    .user-info {
        flex: 1;
    }
    
    .user-name {
        font-size: 1.25rem;
        font-weight: 600;
        color: #333;
        margin: 0;
    }
    
    .user-id {
        color: #6c757d;
        font-size: 0.85rem;
    }
    
    .user-role {
        position: absolute;
        top: 15px;
        right: 15px;
        padding: 4px 12px;
        border-radius: 6px;
        font-size: 0.75rem;
        font-weight: 600;
    }
    
    .role-admin {
        background: #f8d7da;
        color: #721c24;
    }
    
    .role-user {
        background: #d1ecf1;
        color: #0c5460;
    }
    
    .user-actions {
        margin-top: 15px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .btn-sm-custom {
        padding: 6px 12px;
        font-size: 0.8rem;
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }
    
    .btn-delete {
        background: #dc3545;
        color: white;
    }
    
    .btn-delete:hover {
        transform: translateY(-1px);
        box-shadow: 0 3px 8px rgba(220, 53, 69, 0.3);
    }
    
    .user-status {
        font-size: 0.8rem;
        color: #6c757d;
        font-style: italic;
    }
    
    .alert-custom {
        border-radius: 8px;
        border: none;
        margin-bottom: 20px;
        padding: 12px 15px;
    }
    
    .alert-danger-custom {
        background: #fee;
        color: #c33;
        border-left: 4px solid #c33;
    }
    
    .alert-success-custom {
        background: #efe;
        color: #363;
        border-left: 4px solid #363;
    }
    
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #6c757d;
    }
    
    .empty-state i {
        font-size: 4rem;
        margin-bottom: 20px;
        color: #dee2e6;
    }
    
    .stats-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }
    
    .stat-card {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
        border: 2px solid #e9ecef;
    }
    
    .stat-number {
        font-size: 2rem;
        font-weight: bold;
        color: #dc3545;
    }
    
    .stat-label {
        color: #6c757d;
        font-size: 0.9rem;
    }
    
    @* @keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    } *@
    
    @* @media (max-width: 768px) {
        .user-grid {
            grid-template-columns: 1fr;
        }
        
        .page-container {
            padding: 10px;
        }
        
        .content-body {
            padding: 20px;
        }
        
        .stats-row {
            grid-template-columns: 1fr;
        }
    } *@
</style>

<div class="page-container">
    <div class="content-card">
        <div class="page-header">
            <div style="font-size: 3rem; margin-bottom: 10px;">
                <i class="fas fa-users-cog"></i>
            </div>
            <h1>Panel Administratora</h1>
            <p>Zarządzaj użytkownikami systemu TaskFlow</p>
        </div>
        
        <div class="content-body">
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert-custom alert-danger-custom">
                    <i class="fas fa-exclamation-triangle"></i>
                    @TempData["ErrorMessage"]
                </div>
            }
            
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert-custom alert-success-custom">
                    <i class="fas fa-check-circle"></i>
                    @TempData["SuccessMessage"]
                </div>
            }
            
            <div class="stats-row">
                <div class="stat-card">
                    <div class="stat-number">@Model.Count()</div>
                    <div class="stat-label">Łączna liczba użytkowników</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">@Model.Count(u => u.Role == "ADMIN")</div>
                    <div class="stat-label">Administratorzy</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">@Model.Count(u => u.Role == "User")</div>
                    <div class="stat-label">Zwykli użytkownicy</div>
                </div>
            </div>
            
            <div class="action-buttons">
                <a asp-action="AddUser" class="btn-custom btn-danger-custom">
                    <i class="fas fa-user-plus"></i> Dodaj użytkownika
                </a>
            </div>
            
            @if (Model.Any())
            {
                <div class="user-grid">
                    @foreach (var user in Model)
                    {
                        <div class="user-card">
                            <div class="user-role @(user.Role == "ADMIN" ? "role-admin" : "role-user")">
                                <i class="fas fa-@(user.Role == "ADMIN" ? "crown" : "user")"></i>
                                @user.Role
                            </div>
                            
                            <div class="user-header">
                                <div class="user-avatar">
                                    @user.UserName.Substring(0, 1).ToUpper()
                                </div>
                                <div class="user-info">
                                    <div class="user-name">@user.UserName</div>
                                    <div class="user-id">ID: @user.Id</div>
                                </div>
                            </div>
                            
                            <div class="user-actions">
                                @{
                                    var currentUserId = ViewContext.HttpContext.Session.GetString("Id");
                                    var adminCount = Model.Count(u => u.Role == "ADMIN");
                                    var canDelete = user.Id.ToString() != currentUserId && 
                                                  !(user.Role == "ADMIN" && adminCount <= 1);
                                }
                                
                                @if (canDelete)
                                {
                                    <form asp-action="DeleteUser" method="post" style="display: inline;" 
                                          onsubmit="return confirm('Czy na pewno chcesz usunąć użytkownika @user.UserName? Ta akcja jest nieodwracalna.')">
                                        <input type="hidden" name="id" value="@user.Id" />
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn-sm-custom btn-delete">
                                            <i class="fas fa-trash"></i> Usuń
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    @if (user.Id.ToString() == currentUserId)
                                    {
                                        <span class="user-status">To Ty</span>
                                    }
                                    else if (user.Role == "ADMIN" && adminCount <= 1)
                                    {
                                        <span class="user-status">Jedyny administrator</span>
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-users"></i>
                    <h3>Brak użytkowników</h3>
                    <p>Nie ma żadnych użytkowników w systemie.</p>
                    <a asp-action="AddUser" class="btn-custom btn-danger-custom">
                        <i class="fas fa-user-plus"></i> Dodaj pierwszego użytkownika
                    </a>
                </div>
            }
        </div>
    </div>
</div>